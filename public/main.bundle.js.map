{"version":3,"sources":["/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/$_lazy_route_resource lazy","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/app.component.css","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/app.component.html","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/app.component.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/app.module.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/add-todo/add-todo.component.css","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/add-todo/add-todo.component.html","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/add-todo/add-todo.component.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/dialog-delete-attachement.html","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/dialog-delete-todo.html","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/edit-todo.component.css","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/edit-todo.component.html","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/edit-todo.component.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/list-todo/list-todo.component.css","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/list-todo/list-todo.component.html","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/list-todo/list-todo.component.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/error.module.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-component/errors.component.css","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-component/errors.component.html","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-component/errors.component.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-handler/errors-handler.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-routing/errors-routing.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-service/errors.service.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/server-errors-interceptor/server-errors.interceptor.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/models/todo.model.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/routes/app.routing.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/services/custom-toast.service.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/services/global.service.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/services/todo.service.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/environments/environment.ts","/home/test/Hitesh/Tech/Node/node-todo/angular-src/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  color: #369;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 250%;\\n}\\n\\n.example-spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto;\\n}\\n\\n.mat-icon {\\n      margin: 0 4px 3px 0;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<ng-container *ngIf=\\\"_globalService.showHeaderAndFooter\\\">\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <a class=\\\"docs-navbar-hide-small docs-button mat-button ng-star-inserted\\\" mat-button=\\\"\\\" tabindex=\\\"0\\\" aria-disabled=\\\"false\\\"\\n        routerLink=\\\"/add\\\">\\n        <mat-icon>add</mat-icon>\\n        <span class=\\\"mat-button-wrapper\\\">Add</span>\\n        <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n        <div class=\\\"mat-button-focus-overlay\\\"></div>\\n      </a>\\n      <a class=\\\"docs-navbar-hide-small docs-button mat-button ng-star-inserted\\\" mat-button=\\\"\\\" tabindex=\\\"0\\\" aria-disabled=\\\"false\\\"\\n        routerLink=\\\"/list\\\">\\n        <mat-icon>list</mat-icon>\\n        <span class=\\\"mat-button-wrapper\\\">List</span>\\n        <div class=\\\"mat-button-ripple mat-ripple\\\" matripple=\\\"\\\"></div>\\n        <div class=\\\"mat-button-focus-overlay\\\"></div>\\n      </a>\\n      <span class=\\\"example-spacer\\\"></span>\\n      <span>{{title}}</span>\\n\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n</ng-container>\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { GlobalService } from './shared/services/global.service';\nimport { Component } from '@angular/core';\nimport { TodoService } from './shared/services/todo.service';\nimport { Todo } from './shared/models/todo.model';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Todo - MEAN App';\n  todos: Todo[];\n\n  constructor(private todoService: TodoService, public _globalService: GlobalService) {\n    this.todoService.todosApiUrl = environment.todosApiUrl;\n  }\n\n  ngOnInit() {\n    this.getTodos();\n  }\n\n  getTodos() {\n    this.todoService.getTodos().then((todos) => {\n      this.todos = todos;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/app.component.ts","import { GlobalService } from './shared/services/global.service';\nimport { CustomToastService } from './shared/services/custom-toast.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { TodoService } from './shared/services/todo.service';\nimport { appRoutingProviders, routing } from './shared/routes/app.routing';\nimport { AddTodoComponent } from './modules/todo/add-todo/add-todo.component';\nimport { ListTodoComponent } from './modules/todo/list-todo/list-todo.component';\nimport { EditTodoComponent, DialogDeleteAttachment, DialogDeleteTodo } from './modules/todo/edit-todo/edit-todo.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule, MatListModule, MatDialogModule, MatSortModule, MatTooltipModule } from '@angular/material';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { ErrorsModule } from './shared/error/error.module';\nimport { errorRouting } from './shared/error/errors-routing/errors-routing';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddTodoComponent,\n    ListTodoComponent,\n    EditTodoComponent,\n    DialogDeleteAttachment, DialogDeleteTodo\n  ],\n  imports: [\n    routing,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatInputModule,\n    MatCardModule,\n    MatGridListModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatListModule,\n    MatDialogModule,\n    MatSortModule,\n    MatTooltipModule,\n    FileUploadModule,\n    ErrorsModule, // ERROR HANDLING\n    errorRouting// ERROR HANDLING\n  ],\n  entryComponents: [DialogDeleteAttachment, DialogDeleteTodo],\n  providers: [appRoutingProviders, TodoService, CustomToastService, GlobalService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/app.module.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n\\n.example-container > * {\\n  width: 100%;\\n}\\n\\n.example-container form {\\n  margin-bottom: 20px;\\n}\\n\\n.example-container form > * {\\n  margin: 5px 0;\\n}\\n\\n.example-container .mat-radio-button {\\n  margin: 0 5px;\\n}\\n\\n.mat-form-field{\\n    width: 100%;\\n}\\n\\nmat-grid-tile {\\n  /* background: lightblue; */\\n}\\n\\n.mat-grid-tile .mat-figure{\\n    display: block !important;\\n}\\n\\n.form-buttons{\\n    text-align: center;\\n}\\n\\n.mat-card{\\n    background: rgba(0,0,0,.02);\\n}\\n\\n.mat-toolbar{\\n    \\n    background: rgba(0,0,0,.04);\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/add-todo/add-todo.component.css\n// module id = ../../../../../src/app/modules/todo/add-todo/add-todo.component.css\n// module chunks = main","module.exports = \"<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"700px\\\">\\n  <mat-grid-tile [colspan]=\\\"1\\\">\\n    &nbsp;\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile [colspan]=\\\"2\\\">\\n    <mat-card>\\n      <mat-toolbar>Add a new Todo</mat-toolbar>\\n      <div class=\\\"example-container\\\">\\n        <form class=\\\"example-container\\\" [formGroup]=\\\"addTodoForm\\\">\\n          <div>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Name\\\" [formControl]=\\\"addTodoForm.controls['name']\\\" type=\\\"text\\\" name=\\\"name\\\">\\n              <mat-error *ngIf=\\\"addTodoForm.controls['name'].invalid\\\">You must enter a value</mat-error>\\n            </mat-form-field>\\n          </div>\\n          <br>\\n          <div>\\n            <label>Complete: </label>\\n            <mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"addTodoForm.controls['isDone']\\\">\\n              <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"true\\\">\\n                Yes\\n              </mat-radio-button>\\n              <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"false\\\">\\n                No\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n          <br>\\n          <div>\\n            <label>Upload: </label>\\n            <!-- <button mat-mini-fab type=\\\"button\\\">\\n              <label for=\\\"fileToUpload\\\">\\n                <mat-icon>add</mat-icon>\\n              </label>\\n            </button> -->\\n            <input #inputFileUpload type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"fileToUpload\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n          </div>\\n          <br>\\n          <div class=\\\"col-md-8\\\">\\n            <h3>File Upload</h3>\\n            Queue length: {{ uploader?.queue?.length }}\\n\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"50%\\\">Name</th>\\n                  <th>Size</th>\\n                  <th>Progress</th>\\n                  <th>Status</th>\\n                  <th>Actions</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                  <td>\\n                    <strong>{{ item.file.name }}</strong>\\n                  </td>\\n                  <td nowrap>{{ item.file.size/1024/1024 | number:'.2' }} MB</td>\\n                  <td>\\n                    <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\n                      <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\n                    </div>\\n                  </td>\\n                  <td class=\\\"text-center\\\">\\n                    <span *ngIf=\\\"item.isSuccess\\\">\\n                      <mat-icon>done</mat-icon>\\n                    </span>\\n                    <span *ngIf=\\\"item.isCancel\\\">\\n                      <mat-icon>cancel</mat-icon>\\n                    </span>\\n                    <span *ngIf=\\\"item.isError\\\">\\n                      <mat-icon>error</mat-icon>\\n                    </span>\\n                  </td>\\n                  <td nowrap>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\" (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\n                      <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\n                      <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"item.remove()\\\">\\n                      <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\n                    </button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div>\\n            <div>\\n              Queue progress:\\n              <div class=\\\"progress\\\" style=\\\"\\\">\\n                <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{uploader.progress}}\\\"></mat-progress-bar>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-buttons\\\">\\n            <mat-grid-list cols=\\\"4\\\">\\n              <mat-grid-tile [colspan]=\\\"2\\\">\\n                <button color=\\\"accent\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"onAdd(addTodoForm.value)\\\" [disabled]=\\\"!addTodoForm.valid\\\">Add</button>\\n              </mat-grid-tile>\\n              <mat-grid-tile [colspan]=\\\"2\\\">\\n                <button type=\\\"button\\\" mat-raised-button (click)=\\\"onClear()\\\">Clear</button>\\n              </mat-grid-tile>\\n            </mat-grid-list>\\n          </div>\\n        </form>\\n      </div>\\n    </mat-card>\\n  </mat-grid-tile>\\n  <mat-grid-tile [colspan]=\\\"1\\\">\\n    &nbsp;\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/add-todo/add-todo.component.html\n// module id = ../../../../../src/app/modules/todo/add-todo/add-todo.component.html\n// module chunks = main","import { Todo } from './../../../shared/models/todo.model';\nimport { TodoService } from './../../../shared/services/todo.service';\nimport { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CustomToastService } from '../../../shared/services/custom-toast.service';\nimport { FileUploader, FileItem, ParsedResponseHeaders } from 'ng2-file-upload';\n\n@Component({\n  selector: 'app-add-todo',\n  templateUrl: './add-todo.component.html',\n  styleUrls: ['./add-todo.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AddTodoComponent implements OnInit {\n\n  addTodoForm: FormGroup;\n  newTodo: Todo;\n  public uploader: FileUploader\n  uploadedResp = [];\n  @ViewChild('inputFileUpload')\n  inputFileUpload: any;\n\n  constructor(private formBuilder: FormBuilder, private todoService: TodoService,\n    public customToastService: CustomToastService) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n    //Initialize the uploader plugin\n    this.uploader = new FileUploader({ url: this.todoService.todosUploadUrl });\n    debugger;\n    this.uploader.onErrorItem = (item, response, status, headers) => this.onErrorItem(item, response, status, headers);\n    this.uploader.onSuccessItem = (item, response, status, headers) => this.onSuccessItem(item, response, status, headers);\n  }\n\n  onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    let data = JSON.parse(response); //success server response\n    this.uploadedResp.push(data);\n  }\n\n  onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    let error = JSON.parse(response); //error server response\n  }\n\n  createForm() {\n    this.addTodoForm = this.formBuilder.group({ 'name': ['', Validators.compose([Validators.required])], 'isDone': ['', Validators.compose([Validators.required])] });\n  }\n\n  onAdd(todo: Todo) {\n    if (this.uploadedResp.length > 0) {//Check for attachment uploaded\n      todo.hasAttachment = true;\n\n      this.uploadedResp.forEach(resp => {\n        if (resp.success) {\n          let payload = resp.payload;\n          todo.hasAttachment = true;\n\n          if (!todo.files)\n            todo.files = [{ name: payload.originalname, savedName: payload.filename, fileType: payload.mimetype, size: payload.size }];\n          else\n            todo.files.push({ name: payload.originalname, savedName: payload.filename, fileType: payload.mimetype, size: payload.size });\n        }\n      });\n    }\n    else {\n      todo.hasAttachment = false;\n    }\n\n    this.todoService.addOrUpdateTodo(todo).then((result) => {\n      if (result._body === \"Added\") {\n        this.customToastService.toastMessage(\"Todo added to the list.\", \"\");\n        this.clearFields();\n      }\n    });\n  }\n\n  onClear() {\n    this.clearFields();\n  }\n\n  clearFields() {\n    this.addTodoForm.reset();\n    this.uploadedResp = [];\n    this.uploader.clearQueue();\n    this.inputFileUpload.nativeElement.value = \"\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/add-todo/add-todo.component.ts","module.exports = \"<h1 mat-dialog-title>Delete Attachment</h1>\\n<div mat-dialog-content>\\n  <p>\\n    <b>{{data.file.name}}</b>\\n  </p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">No</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"onYesClick()\\\">Yes</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/dialog-delete-attachement.html\n// module id = ../../../../../src/app/modules/todo/edit-todo/dialog-delete-attachement.html\n// module chunks = main","module.exports = \"<h1 mat-dialog-title>Delete Todo</h1>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">No</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"onYesClick()\\\">Yes</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/dialog-delete-todo.html\n// module id = ../../../../../src/app/modules/todo/edit-todo/dialog-delete-todo.html\n// module chunks = main","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n\\n.example-container>* {\\n  width: 100%;\\n}\\n\\n.example-container form {\\n  margin-bottom: 20px;\\n}\\n\\n.example-container form>* {\\n  margin: 5px 0;\\n}\\n\\n.example-container .mat-radio-button {\\n  margin: 0 5px;\\n}\\n\\n.mat-form-field {\\n  width: 100%;\\n}\\n\\nmat-grid-tile {\\n  /* background: lightblue; */\\n}\\n\\n.mat-grid-tile .mat-figure {\\n  display: block !important;\\n}\\n\\n.form-buttons {\\n  text-align: center;\\n}\\n\\n.mat-card {\\n  background: rgba(0, 0, 0, .02);\\n}\\n\\n.mat-toolbar {\\n  background: rgba(0, 0, 0, .04);\\n}\\n\\n.mat-card-image {\\n  width: 100px !important;\\n}\\n\\n.mat-list-item-content {\\n  margin-top: 15px !important;\\n}\\n\\n.btn-delete {\\n  padding-left: 50px;\\n}\\n\\n.mat-dialog-content {\\n  padding: 0 !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/edit-todo.component.css\n// module id = ../../../../../src/app/modules/todo/edit-todo/edit-todo.component.css\n// module chunks = main","module.exports = \"<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"700px\\\">\\n  <mat-grid-tile [colspan]=\\\"1\\\">\\n    &nbsp;\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile [colspan]=\\\"2\\\">\\n    <mat-card>\\n      <mat-toolbar>Edit an existing Todo</mat-toolbar>\\n      <div class=\\\"example-container\\\">\\n        <form class=\\\"example-container\\\" [formGroup]=\\\"editTodoForm\\\">\\n          <div>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"existingTodo.name\\\" type=\\\"text\\\" name=\\\"name\\\" [formControl]=\\\"editTodoForm.controls['name']\\\">\\n              <mat-error *ngIf=\\\"editTodoForm.controls['name'].invalid\\\">You must enter a value</mat-error>\\n            </mat-form-field>\\n          </div>\\n          <br>\\n          <div>\\n            <label>Complete: </label>\\n            <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"existingTodo.isDone\\\" [formControl]=\\\"editTodoForm.controls['isDone']\\\">\\n              <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"true\\\">\\n                Yes\\n              </mat-radio-button>\\n              <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"false\\\">\\n                No\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n          <br>\\n          <div *ngIf=\\\"existingTodo.files\\\">\\n            <!-- <label>\\n              <mat-icon>attach_file</mat-icon>Attachment: </label> -->\\n            <mat-list>\\n              <mat-list-item *ngFor=\\\"let file of existingTodo.files\\\">\\n                <img mat-card-image src=\\\"{{this.todoService.todosApiUrl}}todos/upload/{{file.savedName}}\\\" [alt]=\\\"file.savedName\\\"\\n                  matTooltip=\\\"{{file.name}}\\\">\\n                <button class=\\\"btn-delete\\\" mat-icon-button (click)=\\\"openDeleteAttachmentDialog(file)\\\">\\n                  <mat-icon matTooltip=\\\"Delete attachment\\\">delete</mat-icon>\\n                </button>\\n              </mat-list-item>\\n            </mat-list>\\n          </div>\\n          <br>\\n          <div class=\\\"form-buttons\\\">\\n            <mat-grid-list cols=\\\"4\\\">\\n              <mat-grid-tile [colspan]=\\\"2\\\">\\n                <button color=\\\"accent\\\" mat-raised-button type=\\\"button\\\" [disabled]=\\\"!editTodoForm.valid\\\" (click)=\\\"onUpdate(editTodoForm.value)\\\">Update</button>\\n              </mat-grid-tile>\\n              <mat-grid-tile [colspan]=\\\"2\\\">\\n                <button color=\\\"warn\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"openDeleteTodoDialog()\\\">Remove</button>\\n              </mat-grid-tile>\\n            </mat-grid-list>\\n          </div>\\n        </form>\\n      </div>\\n    </mat-card>\\n  </mat-grid-tile>\\n  <mat-grid-tile [colspan]=\\\"1\\\">\\n    &nbsp;\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/edit-todo.component.html\n// module id = ../../../../../src/app/modules/todo/edit-todo/edit-todo.component.html\n// module chunks = main","import { CustomToastService } from './../../../shared/services/custom-toast.service';\nimport { Todo } from './../../../shared/models/todo.model';\nimport { TodoService } from './../../../shared/services/todo.service';\nimport { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-edit-todo',\n  templateUrl: './edit-todo.component.html',\n  styleUrls: ['./edit-todo.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class EditTodoComponent implements OnInit {\n\n  editTodoForm: FormGroup;\n  existingTodo: Todo = new Todo();\n\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private todoService: TodoService,\n    public customToastService: CustomToastService, public dialog: MatDialog) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.route.params.map(params => params['id']).subscribe((inbuiltId) => {\n      if (inbuiltId) {\n        this.loadTodoById(inbuiltId);\n      }\n      else {\n        alert(\"Empty id!\");\n      }\n    });\n  }\n\n  loadTodoById(inbuiltId: string) {\n    this.todoService.getTodoByInbuiltId(inbuiltId).then((todo: Todo) => {\n      if (todo)\n        this.existingTodo = todo;\n      else\n        alert(\"Empty Object!\");\n    });\n  }\n\n  createForm() {\n    this.editTodoForm = this.formBuilder.group({ 'name': ['', Validators.compose([Validators.required])], 'isDone': ['', Validators.compose([Validators.required])] });\n  }\n\n  onUpdate(formValue) {\n    this.todoService.addOrUpdateTodo(this.existingTodo).then((result) => {\n      if (result._body === \"Updated\") {\n        this.customToastService.toastMessage(\"Todo updated in the list.\", \"\");\n        this.router.navigate(['/list']);\n      }\n    });\n  }\n\n  onRemove() {\n    let inbuiltId = this.existingTodo._id;\n\n    this.todoService.removeTodo(inbuiltId).then((result) => {\n      if (result._body === \"Deleted\") {\n        this.customToastService.toastMessage(\"Todo removed!\", \"\");\n        this.router.navigate(['/list']);\n      }\n    });\n  }\n\n  openDeleteAttachmentDialog(file): void {\n    let dialogDeleteAttachmentRef = this.dialog.open(DialogDeleteAttachment, {\n      width: '250px',\n      data: {\n        file: file,\n        inbuiltId: this.existingTodo._id\n      }\n    });\n\n    dialogDeleteAttachmentRef.afterClosed().subscribe(result => {\n      this.loadTodoById(this.existingTodo._id);\n    });\n  }\n\n  openDeleteTodoDialog(): void {\n    let dialogDeleteTodoRef = this.dialog.open(DialogDeleteTodo, {\n      width: '250px',\n      data: {\n        inbuiltId: this.existingTodo._id\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-delete-attachement',\n  templateUrl: 'dialog-delete-attachement.html',\n})\nexport class DialogDeleteAttachment {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogDeleteAttachment>,\n    @Inject(MAT_DIALOG_DATA) public data: any, private todoService: TodoService, public customToastService: CustomToastService) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onYesClick(): void {\n    let inbuiltId = this.data.inbuiltId;\n    let fileName = this.data.file.savedName;\n\n    this.todoService.removeTodoAttachment(inbuiltId, fileName).then((result) => {\n      if (result._body === \"Deleted\") {\n        this.dialogRef.close();\n        this.customToastService.toastMessage(\"Attachment removed!\", \"\");\n      }\n    });\n  }\n\n}\n\n@Component({\n  selector: 'dialog-delete-todo',\n  templateUrl: 'dialog-delete-todo.html',\n})\nexport class DialogDeleteTodo {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogDeleteTodo>,\n    @Inject(MAT_DIALOG_DATA) public data: any, private todoService: TodoService, public customToastService: CustomToastService, private router: Router) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onYesClick(): void {\n    let inbuiltId = this.data.inbuiltId;\n\n    this.todoService.removeTodo(inbuiltId).then((result) => {\n      if (result._body === \"Deleted\") {\n        this.dialogRef.close();\n        this.customToastService.toastMessage(\"Todo removed!\", \"\");\n        this.router.navigate(['/list']);\n      }\n    });\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/edit-todo/edit-todo.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\n.docs-primary-header h1 {\\n  font-size: 30px;\\n  font-weight: 300;\\n  margin: 0;\\n  padding: 28px 8px;\\n  font-size: 20px;\\n}\\n\\n.example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n\\n.example-container>* {\\n  width: 100%;\\n}\\n\\n.example-container form {\\n  margin-bottom: 20px;\\n}\\n\\n.example-container form>* {\\n  margin: 5px 0;\\n}\\n\\n.example-container .mat-radio-button {\\n  margin: 0 5px;\\n}\\n\\n.mat-form-field {\\n  width: 85%;\\n}\\n\\nmat-grid-tile {\\n  /* background: lightblue; */\\n}\\n\\n.form-buttons {\\n  text-align: center;\\n}\\n\\n.mat-card {\\n  background: rgba(0, 0, 0, .02);\\n}\\n\\n.mat-toolbar {\\n  background: rgba(0, 0, 0, .04);\\n}\\n\\n/* Structure */\\n\\n.example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px;\\n}\\n\\n.example-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\n.mat-grid-tile .mat-figure {\\n  display: block !important;\\n}\\n\\n.mat-card-image {\\n  margin: 5px 0px 0px 5px !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/list-todo/list-todo.component.css\n// module id = ../../../../../src/app/modules/todo/list-todo/list-todo.component.css\n// module chunks = main","module.exports = \"<mat-grid-list cols=\\\"5\\\" rowHeight=\\\"1000px\\\">\\n  <mat-grid-tile [colspan]=\\\"1\\\">\\n    &nbsp;\\n  </mat-grid-tile>\\n\\n  <mat-grid-tile [colspan]=\\\"2\\\">\\n    <mat-card>\\n      <mat-toolbar>List of Todos</mat-toolbar>\\n      <div *ngIf=\\\"todos\\\" class=\\\"example-container mat-elevation-z8\\\">\\n        <div class=\\\"example-header\\\">\\n          <mat-form-field>\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n          </mat-form-field>\\n        </div>\\n\\n        <mat-table [dataSource]=\\\"sortedData\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n\\n          <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"avatar\\\">\\n            <mat-header-cell *matHeaderCellDef> Avatar </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n              <ng-container *ngIf=\\\"element.files.length\\\">\\n                <img mat-card-image matTooltip=\\\"{{element.files[0].name}}\\\" src=\\\"{{this.todoService.todosApiUrl}}todos/upload/{{element.files[0].savedName}}\\\"\\n                  [alt]=\\\"element.files[0].savedName\\\">\\n              </ng-container>\\n              <ng-container *ngIf=\\\"!element.files.length\\\">\\n                No avatar uploaded\\n              </ng-container>\\n\\n            </mat-cell>\\n\\n\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Has Attachment Column -->\\n          <ng-container matColumnDef=\\\"Attachment\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Has Attachment</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.Attachment}} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"Attach_Count\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Count</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.Attach_Count}} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"Done\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Done</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.Done}} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <mat-header-cell *matHeaderCellDef> Actions</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n\\n              <button mat-icon-button routerLink=\\\"/edit/{{element._id}}\\\">\\n                <mat-icon matTooltip=\\\"Edit todo\\\">edit</mat-icon>\\n              </button>\\n\\n              <!-- <button color=\\\"accent\\\" mat-raised-button routerLink=\\\"/edit/{{element._id}}\\\">Edit</button> -->\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n\\n        <mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10, 25, 50]\\\" [showFirstLastButtons]=\\\"true\\\">\\n        </mat-paginator>\\n      </div>\\n      <div *ngIf=\\\"!todos\\\" class=\\\"example-container mat-elevation-z8\\\">\\n        <h5>No records found</h5>\\n      </div>\\n    </mat-card>\\n  </mat-grid-tile>\\n  <mat-grid-tile [colspan]=\\\"1\\\">\\n    &nbsp;\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/list-todo/list-todo.component.html\n// module id = ../../../../../src/app/modules/todo/list-todo/list-todo.component.html\n// module chunks = main","import { TodoService } from './../../../shared/services/todo.service';\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Todo } from '../../../shared/models/todo.model';\nimport { MatTableDataSource, MatSort, MatPaginator, Sort } from '@angular/material';\nimport { GlobalService } from '../../../shared/services/global.service';\n\n@Component({\n  selector: 'app-list-todo',\n  templateUrl: './list-todo.component.html',\n  styleUrls: ['./list-todo.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ListTodoComponent implements OnInit {\n\n  todos;\n  displayedColumns = ['avatar', 'name', 'Attachment', 'Attach_Count', 'Done', \"actions\"];\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private todoService: TodoService, private _globalService: GlobalService) {\n    this._globalService.showHeaderAndFooter = true;\n  }\n\n  ngOnInit() {\n    this.getTodos();\n  }\n\n  getTodos() {\n    this.todoService.getTodos().then((todos: Todo[]) => {\n      this.todos = new MatTableDataSource(todos);\n\n      this.sortedData = this.todos.filteredData;//To extract data from todos\n    });\n  }\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.todos.filter = filterValue;\n  }\n\n  sortedData;\n\n  sortData(sort: Sort) {//Sorting logic\n    const data = this.sortedData.slice();\n    if (!sort.active || sort.direction == '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      let isAsc = sort.direction == 'asc';\n      switch (sort.active) {\n        case 'name': return this.compare(a.name, b.name, isAsc);\n        case 'Attachment': return this.compare(a.Attachment, b.Attachment, isAsc);\n        case 'Done': return this.compare(a.Done, b.Done, isAsc);\n        default: return 0;\n      }\n    });\n  }\n\n  compare(a, b, isAsc) {//Function for comparing two adjacent values\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/modules/todo/list-todo/list-todo.component.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { ErrorsComponent } from './errors-component/errors.component';\nimport { ErrorsService } from './errors-service/errors.service';\nimport { ErrorsHandler } from './errors-handler/errors-handler';\nimport { ServerErrorsInterceptor } from './server-errors-interceptor/server-errors.interceptor';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n  ],\n  declarations: [\n    ErrorsComponent\n  ],\n  providers: [\n    ErrorsService,\n    {\n      provide: ErrorHandler,\n      useClass: ErrorsHandler,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ServerErrorsInterceptor,\n      multi: true\n    },\n  ]\n})\nexport class ErrorsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/error.module.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h5 {\\n  color: blue;\\n  font-size: 25px;\\n  background-color: floralwhite;\\n}\\n\\n.error-container {\\n  text-align: center;\\n}\\n\\nh3 {\\n  font-size: 25px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-component/errors.component.css\n// module id = ../../../../../src/app/shared/error/errors-component/errors.component.css\n// module chunks = main","module.exports = \"<div class=\\\"error-container\\\">\\n\\n  <div *ngIf=\\\"data?.error\\\">\\n    <h1>ERROR {{ data?.error}}</h1>\\n    <h5 *ngIf=\\\"data?.error === 404\\\">Not found :(</h5>\\n    <a [routerLink]=\\\"'/list'\\\">\\n      <h5>Go Home</h5>\\n    </a>\\n  </div>\\n\\n  <div *ngIf=\\\"routeParams.message\\\">\\n    <h1 *ngIf=\\\"routeParams?.status\\\"> ERROR {{ routeParams?.status }}</h1>\\n    <br/>\\n    <h3 *ngIf=\\\"routeParams?.message\\\">{{ routeParams?.message }}</h3>\\n    <br/>\\n    <h1 *ngIf=\\\"routeParams?.url && routeParams?.url !== '/'\\\">Error in {{ routeParams?.url | uppercase }} page, Sorry {{ routeParams?.user }} :(</h1>\\n    <h4 *ngIf=\\\"routeParams?.id\\\">This error has been reported to the Administrator with the ID:\\n      <br> {{ routeParams?.id}}</h4>\\n    <br>\\n    <a [routerLink]=\\\"routeParams?.url\\\" *ngIf=\\\"routeParams?.url && routeParams.status !== '404'\\\">\\n      <h5>Click here to Retry</h5>\\n    </a>\\n    <br>\\n    <a routerLink=\\\"/\\\" *ngIf=\\\"!routeParams.url || routeParams.status === '404'\\\">\\n      <h5>Go Back to home</h5>\\n    </a>\\n  </div>\\n\\n  <div *ngIf=\\\"!routeParams && !data\\\">\\n    <h1>Unknown error, sorry :(</h1>\\n    <a [routerLink]=\\\"'/trayview'\\\">\\n      <h5>Go Home</h5>\\n    </a>\\n  </div>\\n</div>\\n\\n<div class=\\\"pre-container\\\" *ngIf=\\\"routeParams?.message\\\">\\n  <p>Error sent to the server</p>\\n  <pre>\\n    {{ this.routeParams | json }}\\n  </pre>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-component/errors.component.html\n// module id = ../../../../../src/app/shared/error/errors-component/errors.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { GlobalService } from '../../services/global.service';\n\n@Component({\n  selector: 'cm-error',\n  templateUrl: './errors.component.html',\n  styleUrls: ['./errors.component.css']\n})\nexport class ErrorsComponent implements OnInit {\n  routeParams;\n  data;\n\n  constructor(private activatedRoute: ActivatedRoute, private _globalService: GlobalService) {\n    this._globalService.showHeaderAndFooter = false;\n  }\n\n  ngOnInit() {\n    this.routeParams = this.activatedRoute.snapshot.queryParams;\n    this.data = this.activatedRoute.snapshot.data;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-component/errors.component.ts","import { ErrorHandler, Injectable, Injector, Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ErrorsService } from '../errors-service/errors.service';\nimport { CustomToastService } from '../../services/custom-toast.service';\n\n@Injectable()\nexport class ErrorsHandler implements ErrorHandler {\n\n    constructor(public injector: Injector) {\n    }\n\n    handleError(error: Error | HttpErrorResponse) {\n        const customToastService = this.injector.get(CustomToastService);\n\n        const errorsService = this.injector.get(ErrorsService);\n        const router = this.injector.get(Router);\n\n        if (error instanceof HttpErrorResponse) {\n            // Server error happened\n            if (!navigator.onLine) {\n                // No Internet connection\n                return customToastService.toastMessage('No Internet Connection', '');\n            }\n            // Http Error\n            // Send the error to the server\n            errorsService.log(error).subscribe();\n\n            // Show notification to the user\n\n            return customToastService.toastMessage(`HttpError Occured : ${error.status} - ${error.message}`, '');\n        } else\n            if (error instanceof TypeError) {\n                //  TypeError\n                // Create custom Error Object and log the error\n                const errObj = {\n                    message: error.message,\n                    stack: error.stack\n                };\n                errorsService\n                    .log(errObj)\n                    .subscribe(errorWithContextInfo => {\n                        router.navigate(['error'], { queryParams: errorWithContextInfo });\n                    });\n            } else {\n                // Client Error Happend\n                // Send the error to the server and then\n                // redirect the user to the page with all the info\n                const errObj = {\n                    message: error.message,\n                    stack: error.stack\n                };\n\n                errorsService\n                    .log(errObj)\n                    .subscribe(errorWithContextInfo => {\n                        router.navigate(['error'], { queryParams: errorWithContextInfo });\n                    });\n            }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-handler/errors-handler.ts","import { ErrorsComponent } from '../errors-component/errors.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ModuleWithProviders } from '@angular/core';\n\nconst errorRoutes: Routes = [\n  { path: 'error', component: ErrorsComponent },\n  { path: '**', component: ErrorsComponent, data: { error: 404 } },\n];\n\nexport const appRoutingProviders: any[] = [\n];\n\nexport const errorRouting: ModuleWithProviders = RouterModule.forRoot(errorRoutes, { useHash: true });\n\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-routing/errors-routing.ts","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy, DatePipe } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, Event, NavigationError } from '@angular/router';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\nimport * as StackTraceParser from 'error-stack-parser';\n\n@Injectable()\nexport class ErrorsService {\n\n  constructor(\n    private injector: Injector,\n    private router: Router\n  ) {\n    // Subscribe to the NavigationError\n    this.router\n      .events\n      .subscribe((event: Event) => {\n        if (event instanceof NavigationError) {\n          // Redirect to the ErrorComponent\n          this.log(event.error)\n            .subscribe((errorWithContext) => {\n              this.router.navigate(['error'], { queryParams: errorWithContext });\n            });\n        }\n      });\n  }\n\n  log(error) {\n    // Log the error to the console\n    console.error(error);\n    // Send error to server\n    const errorToSend = this.addContextInfo(error);\n    return fakeHttpService.post(errorToSend);\n  }\n\n  addContextInfo(error) {\n    // You can include context details here (usually coming from other services: UserService...)\n    const name = error.name || null;\n    const appId = 'Node - Todo App';\n    //const user = `${this._globalService.actor.first_name} ${this._globalService.actor.last_name}`;\n    const user = `Hitesh Tare`\n    const time = new Date().getTime();\n\n    const id = `${appId}-${user}-${time}`;\n    const location = this.injector.get(LocationStrategy);\n    // const url = location instanceof PathLocationStrategy ? location.path() : '';\n    const url = this.router.url;\n    const status = error.status || null;\n    const message = error.message || error.toString();\n    const stack = error instanceof HttpErrorResponse ? null : StackTraceParser.parse(error);\n\n    const errorWithContext = { name, appId, user, time, id, url, status, message, stack };\n    return errorWithContext;\n  }\n\n}\n\n// tslint:disable-next-line:class-name\nclass fakeHttpService {\n  static post(error): Observable<any> {\n    console.log('CM-Error sent to the server: ', error);\n    return Observable.of(error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/errors-service/errors.service.ts","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/retry';\n\nimport { ErrorsService } from '../errors-service/errors.service';\n\n@Injectable()\nexport class ServerErrorsInterceptor implements HttpInterceptor {\n  constructor(\n    private router: Router,\n    private errorsService: ErrorsService,\n  ) { }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(request).retry(1);\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/error/server-errors-interceptor/server-errors.interceptor.ts","export class Todo {\n    _id: string;\n    username: string;\n    name: string;\n    isDone: boolean;\n    hasAttachment: boolean;\n    files: [{\n        name: string,\n        savedName: string,\n        fileType: string,\n        size: number\n    }]\n}\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/models/todo.model.ts","import { EditTodoComponent } from './../../modules/todo/edit-todo/edit-todo.component';\nimport { ListTodoComponent } from './../../modules/todo/list-todo/list-todo.component';\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './../../app.component';\nimport { AddTodoComponent } from '../../modules/todo/add-todo/add-todo.component';\n\nconst appRoutes: Routes = [\n    { path: '', redirectTo: 'list', pathMatch: 'full' }, // default\n    { path: 'list', component: ListTodoComponent },\n    { path: 'add', component: AddTodoComponent },\n    { path: 'edit/:id', component: EditTodoComponent }\n];\n\nexport const appRoutingProviders: any[] = [\n\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes, { useHash: true });\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/routes/app.routing.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable()\nexport class CustomToastService {\n\n    constructor(public snackBar: MatSnackBar) {\n    }\n\n    toastMessage(message: string, action: string) {\n        this.snackBar.open(message, action, {\n            duration: 2000,\n        });;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/services/custom-toast.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GlobalService {\n\n  public showHeaderAndFooter = false;\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/services/global.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, RequestOptions } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { Todo } from '../models/todo.model';\n\n@Injectable()\nexport class TodoService {\n\n  headers: Headers;\n  options: RequestOptions;\n\n  // For Developement\n  public todosApiUrl = '';\n  public todosUploadUrl = `${this.todosApiUrl}/todos/upload`;\n  // For Developement\n\n  // For Production\n  //private todosApiUrl = '';\n  //public todosUploadUrl = '';\n  // For Production\n\n  constructor(private http: Http) {\n    this.headers = new Headers({\n      'Content-Type': 'application/json',\n      'Accept': 'q=0.8;application/json;q=0.9'\n    });\n    this.options = new RequestOptions({ headers: this.headers });\n  }\n\n  //Fetch all todos configured in DB\n  getTodos(): Promise<Todo[]> {\n    const url = `${this.todosApiUrl}todos`;\n\n    return this.http.get(url).toPromise().then(response => response.json() as Todo[]);\n  }\n\n  //Fetch all todos configured with username passed as param\n  getTodosByUserName(username: string): Promise<Todo[]> {\n    const url = `${this.todosApiUrl}todos/username/${username}`;\n\n    return this.http.get(url).toPromise().then(response => response.json() as Todo[]);\n  }\n\n  //Fetch a todo with id(in-built) passed as param\n  getTodoByInbuiltId(inbuiltId: string): Promise<Todo> {\n    const url = `${this.todosApiUrl}todos/id/${inbuiltId}`;\n\n    return this.http.get(url).toPromise().then(response => response.json() as Todo);\n  }\n\n  //Create or Update a todo with id (in-built) passed as param\n  addOrUpdateTodo(todo: Todo): Promise<any> {\n\n    const body = JSON.stringify(todo);\n    const url = `${this.todosApiUrl}todos/`;\n\n    return this.http.post(url, body, { headers: this.headers }).toPromise().then((response) => { console.log(response); return response; });\n  }\n\n  //Remove a todo with id (in-built) passed as param\n  removeTodo(inbuiltId: string): Promise<any> {\n    const url = `${this.todosApiUrl}todos/${inbuiltId}`;\n\n    return this.http.delete(url).toPromise().then((response) => { console.log(response); return response; });\n  }\n\n  //Remove an attachment with id (in-built) and filename passed as param\n  removeTodoAttachment(inbuiltId: string, fileName: string): Promise<any> {\n    const url = `${this.todosApiUrl}todos/attachments/${inbuiltId}/${fileName}`;\n\n    return this.http.delete(url).toPromise().then((response) => { console.log(response); return response; });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/app/shared/services/todo.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  todosApiUrl: `http://localhost:5000/`\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/test/Hitesh/Tech/Node/node-todo/angular-src/src/main.ts"],"sourceRoot":"webpack:///"}